{"version":3,"sources":["components/App.js","index.js"],"names":["App","useState","templates","console","log","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMA4EeA,MA1Ef,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,gCAEuBA,mBAAS,KAFhC,gCAGqBA,mBAAS,KAH9B,mBAGNC,EAHM,aAIuBD,mBAAS,OAJhC,gCAKWA,mBAAS,OALpB,mBA8Cb,OA9Ca,UA6CbE,QAAQC,IAAIF,GAEV,yBAAKG,UAAU,OAAf,UC5CJC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.83db8817.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport qs from 'qs';\nfunction App() {\n  const [toptext, setTopText] = useState('')\n  const [bottomText, setBottomText] = useState('')\n  const [templates, setTemplates] = useState([]);\n  const [selectedId, setSelectedId] = useState(null);\n  const [meme, setMeme] = useState(null)\n\n  // useEffect(() => {\n  //   fetch('https://api.imgflip.com/get_memes')\n  //     .then(res => res.json())\n  //     .then(res => setTemplates(res.data.memes))\n  // }, []);\n\n\n\n  // const handleChange = (e) => {\n  //   const fildName = e.target.name;\n  //   const fieldValue = e.target.value;\n  //   if(fildName === \"top\" ) {\n  //     setTopText(fieldValue)\n  //   } else {\n  //     setBottomText(fieldValue)\n  //   }\n  // }\n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   const params = {\n  //     template_id: selectedId,\n  //     text0: toptext,\n  //     text1: bottomText,\n  //     username: 'xzk03017',\n  //     password: 'xzk03017@cndps.com'\n  //   }\n  //   fetch(`https://api.imgflip.com/caption_image?${qs.stringify(params)}`)\n  //     .then(resp => resp.json()\n  //     .then(json=> {\n  //       setMeme(json.data.url)\n  //     }))\n  //     setTopText('')\n  //     setBottomText('')\n  // }\n  // const handleClick = (imageId) => {\n  //   setSelectedId(imageId)\n  // }\n  console.log(templates)\n  return (\n    <div className=\"App\">\n      assss\n        {/* <form onSubmit={handleSubmit}>\n          <div className=\"container\">\n           <div> Wpisz tekst na góre obrazka</div>\n          <input type=\"text\" name=\"top\" className=\"top\" value={toptext} onChange={handleChange}/>\n          </div>\n\n       <div  className=\"container\">\n            <div>tekst na dole obrazka</div>\n          <input type=\"text\" name=\"bottom\" className=\"bottom\" value={bottomText} onChange={handleChange}/>\n       </div>\n          <input className=\"button\" type=\"submit\" value=\"Wygeneruj\"/>\n        </form>\n        <div className=\"meme\">\n          {meme ? <img src={meme}/>:null}\n        </div>\n        <div className=\"description\">Wybierz obrazek który chcesz przerobić.</div>\n        <div className=\"meme-container\">\n            {templates && templates.map(item => (\n              <img src={item.url} id={item.id} alt=\"item\" onClick={() => handleClick(item.id)}/>\n            ))}\n        </div> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}