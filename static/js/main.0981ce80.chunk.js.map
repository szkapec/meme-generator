{"version":3,"sources":["components/App.js","index.js"],"names":["App","useState","toptext","setTopText","bottomText","setBottomText","templates","setTemplates","selectedId","setSelectedId","meme","setMeme","useEffect","fetch","then","res","json","data","memes","handleChange","e","fildName","target","name","fieldValue","value","console","log","className","onSubmit","preventDefault","params","template_id","text0","text1","username","password","qs","stringify","resp","url","type","onChange","src","map","item","id","alt","onClick","imageId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MA2EeA,MAzEf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNC,EADM,KACGC,EADH,OAEuBF,mBAAS,IAFhC,mBAENG,EAFM,KAEMC,EAFN,OAGqBJ,mBAAS,IAH9B,mBAGNK,EAHM,KAGKC,EAHL,OAIuBN,mBAAS,MAJhC,mBAINO,EAJM,KAIMC,EAJN,OAKWR,mBAAS,MALpB,mBAKNS,EALM,KAKAC,EALA,KAObC,qBAAU,WACRC,MAAM,qCACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAG,OAAIR,EAAaQ,EAAIE,KAAKC,YACpC,IAIH,IAAMC,EAAe,SAACC,GACpB,IAAMC,EAAWD,EAAEE,OAAOC,KACpBC,EAAaJ,EAAEE,OAAOG,MACZ,QAAbJ,EACDlB,EAAWqB,GAEXnB,EAAcmB,IAyBlB,OADAE,QAAQC,IAAIrB,GAEV,yBAAKsB,UAAU,OACX,0BAAMC,SAvBS,SAACT,GACpBA,EAAEU,iBACF,IAAMC,EAAS,CACbC,YAAaxB,EACbyB,MAAO/B,EACPgC,MAAO9B,EACP+B,SAAU,WACVC,SAAU,sBAEZvB,MAAM,yCAAD,OAA0CwB,IAAGC,UAAUP,KACzDjB,MAAK,SAAAyB,GAAI,OAAIA,EAAKvB,OAClBF,MAAK,SAAAE,GACJL,EAAQK,EAAKC,KAAKuB,WAEpBrC,EAAW,IACXE,EAAc,MASV,yBAAKuB,UAAU,aACd,gEACD,2BAAOa,KAAK,OAAOlB,KAAK,MAAMK,UAAU,MAAMH,MAAOvB,EAASwC,SAAUvB,KAG3E,yBAAMS,UAAU,aACX,sDACF,2BAAOa,KAAK,OAAOlB,KAAK,SAASK,UAAU,SAASH,MAAOrB,EAAYsC,SAAUvB,KAEjF,2BAAOS,UAAU,SAASa,KAAK,SAAShB,MAAM,eAEhD,yBAAKG,UAAU,QACZlB,EAAO,yBAAKiC,IAAKjC,IAAQ,MAE5B,yBAAKkB,UAAU,eAAf,mDACA,yBAAKA,UAAU,kBACVtB,GAAaA,EAAUsC,KAAI,SAAAC,GAAI,OAC9B,yBAAKF,IAAKE,EAAKL,IAAKM,GAAID,EAAKC,GAAIC,IAAI,OAAOC,QAAS,kBAxB5CC,EAwB8DJ,EAAKC,QAvBtFrC,EAAcwC,GADI,IAACA,WCvCvBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.0981ce80.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport qs from 'qs';\nfunction App() {\n  const [toptext, setTopText] = useState('')\n  const [bottomText, setBottomText] = useState('')\n  const [templates, setTemplates] = useState([]);\n  const [selectedId, setSelectedId] = useState(null);\n  const [meme, setMeme] = useState(null)\n\n  useEffect(() => {\n    fetch('https://api.imgflip.com/get_memes')\n      .then(res => res.json())\n      .then(res => setTemplates(res.data.memes))\n  }, []);\n\n\n\n  const handleChange = (e) => {\n    const fildName = e.target.name;\n    const fieldValue = e.target.value;\n    if(fildName === \"top\" ) {\n      setTopText(fieldValue)\n    } else {\n      setBottomText(fieldValue)\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const params = {\n      template_id: selectedId,\n      text0: toptext,\n      text1: bottomText,\n      username: 'xzk03017',\n      password: 'xzk03017@cndps.com'\n    }\n    fetch(`https://api.imgflip.com/caption_image?${qs.stringify(params)}`)\n      .then(resp => resp.json()\n      .then(json=> {\n        setMeme(json.data.url)\n      }))\n      setTopText('')\n      setBottomText('')\n  }\n  const handleClick = (imageId) => {\n    setSelectedId(imageId)\n  }\n  console.log(templates)\n  return (\n    <div className=\"App\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"container\">\n           <div> Wpisz tekst na góre obrazka</div>\n          <input type=\"text\" name=\"top\" className=\"top\" value={toptext} onChange={handleChange}/>\n          </div>\n\n       <div  className=\"container\">\n            <div>tekst na dole obrazka</div>\n          <input type=\"text\" name=\"bottom\" className=\"bottom\" value={bottomText} onChange={handleChange}/>\n       </div>\n          <input className=\"button\" type=\"submit\" value=\"Wygeneruj\"/>\n        </form>\n        <div className=\"meme\">\n          {meme ? <img src={meme}/>:null}\n        </div>\n        <div className=\"description\">Wybierz obrazek który chcesz przerobić.</div>\n        <div className=\"meme-container\">\n            {templates && templates.map(item => (\n              <img src={item.url} id={item.id} alt=\"item\" onClick={() => handleClick(item.id)}/>\n            ))}\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}